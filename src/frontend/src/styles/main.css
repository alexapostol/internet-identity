/*
                                    _  _____  __    __   __
                                   | |  | |  / /`  ( (` ( (`
                                   |_|  |_|  \_\_, _)_) _)_)

                                          `-.` '.-'
                                       `-.    A   .-'.
                                    `-.    -./_\.-    .-'
                                        -.  /___\  .-
                                    `-.   `/__|__\'   .-'.
                                 `-.    -./.-"^"-.\.-      '
                                    `-.  / <`(o)*> \  .-'
                                 .-   .`/__`-...-'__\'   .-
                                ,...`-./_/____|____\_\.-'.,.
                                   ,-'    ,` . . ',   `-,
                               _,-' /____/____.____\____\ `-,_
                                       ,      |      .
                                      /     ,.+.,     \

   -<# ITCSS (Inverted Triangle CSS) -> (https://csswizardry.com/2018/11/itcss-and-skillshare/) #>-
  __________________________________________________________________________________________________
   \---------------------------/------------                          Generic CSS (Low specificity)
    \                         /  I)   Settings (Design)                            Y
     \-----------------------/----------------                                     |
      \                     /    II)  Theme Settings                               |
       \-------------------/--------------------                                   |
        \                 /      III) Generic                                      |
         \---------------/------------------------                                 |
          \             /        IV)  Elements                                     |
           \-----------/----------------------------                               |
            \         /          V)   Objects                                      |
             \-------/--------------------------------                             |
              \     /            VI)  Components                                   |
               \---/------------------------------------                           |
                \ /              VII) Utilities (Trumps)                           V
                 V                                                   Explicit CSS (High specificity)
                 
  I)   Settings:             Global variables, config switches.
  II)  Theme Settings:       DarkMode, LightMode, Product Specific stuff
  III) Generic:              Ground-zero styles (Normalize.css, resets, box-sizing).
  IV)  Base:                 Un-classed HTML elements (type selectors).
  V)   Objects:              Cosmetic-free design patterns (grids, layouts, etc).
  VI)  Components:           Designed components, chunks of UI.
  VII) Utilities/Trumps:     Helpers and overrides. (hidden, error classes, etc)

*/

@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap");

/* I) Settings: Global variables, config switches. */

:root {
  /* 
   * value tokens 
   *
   * raw basic values that should not be used within your components.
   * they control the design system on a higher level and should be used only 
   * in the root element.
   *
   */

  /* value tokens: colors (--vc => valueColor) */
  --vc-raven: #202124;
  --vc-snow: #ffffff;

  --vc-vapour: rgba(255, 255, 255, 0.5);
  --vc-shadow: rgba(32, 33, 36, 0.6);

  --vc-silver: #d9d9d9;

  --vc-brand-orange: #f15a24;
  --vc-brand-yellow: #fbb03b;
  --vc-brand-pink: #ed1e79;
  --vc-brand-purple: #522785;
  --vc-brand-blue: #29abe2;
  --vc-brand-blue--dark: #1f6ef4;

  /**
   * value tokens: sizes (--vs => valueSize)
   * 1) general purpose spacer unit
   * 2) vertical spaces outside of an element
   * 3) horizontal spaces outside of an element
   * 4) space inside an element (usually used for padding)
   * 5) borders and lines (using PX here because we don't want lines to scale)
  **/
  --vs-gutter: 0.5rem; /* 1 */
  --vs-stack: calc(var(--vs-gutter) * 2); /* 2 */
  --vs-inline: calc(var(--vs-gutter) * 2); /* 3 */
  --vs-bezel: calc(var(--vs-gutter) * 2); /* 4 */
  --vs-line: 1px; /* 5 */

  /* value tokens: z-index (--vz => valueZindex */

  --vz-backdrop: -1;
  --vz-tooltip: 10;
  --vz-modal: 20;

  /*
   * reference tokens
   * 
   * pointers to value tokens or other reference tokens. They control the actual
   * design rules.
   *
   */

  /* reference tokens: colors (--rc => referenceColor) */
  --rc-dark: var(--vc-raven);
  --rc-light: var(--vc-snow);

  --rc-dark-transparent: var(--vc-shadow);
  --rc-light-transparent: var(--vc-vapour);

  --rc-text: var(--rc-dark);

  --rc-background: var(--rc-light);
  --rc-background-transparent: var(--rc-light-transparent);

  --rc-line: var(--rc-light);
  --rc-line: var(--vc-silver);
  --rc-line-inverted: var(--rc-dark);

  --rc-interaction: var(--vc-brand-blue);
  --rc-interaction-text: var(--vc-brand-blue--dark);

  --rc-button: var(--rc-dark);
  --rc-onButton: var(--rc-light);

  --rc-warning: var(--vc-brand-pink);
  --rc-onWarning: var(--vc-snow);

  --rc-input: var(--rc-light);
  --rc-onInput: var(--rc-dark);

  /* reference tokens: gradients */
  --rg-brand: var(--vc-brand-yellow) 10%, var(--vc-brand-orange) 40%,
    var(--vc-brand-pink) 50%, var(--vc-brand-purple) 90%;

  /* reference tokens: sizes */
  --rs-footer-stack: calc(var(--vs-stack) * 1.5);

  --rs-footer-gutter: var(--vs-gutter);
  --rs-logo-stack: calc(var(--vs-gutter) * 8);

  --rs-card-bezel: calc(var(--vs-gutter) * 5);
  --rs-card-bezel-x: calc(var(--vs-gutter) * 7);

  --rs-card-stack: calc(var(--vs-stack) * 1.5);
  --rs-card-bezel-narrow: calc(var(--rs-card-bezel) * 0.35);

  --rs-button-bezel: var(--rs-card-bezel-narrow);
  --rs-button-stack: var(--vs-stack);

  --rs-input-bezel: var(--rs-button-bezel);
  --rs-input-stack: var(--rs-button-stack);

  --vs-line-height: 1.35;
}

/* II) Theme Settings: DarkMode, LightMode, Product Specific stuff */

@media (prefers-color-scheme: dark) {
  :root {
    --rc-text: var(--rc-light);

    --rc-background: var(--rc-dark);
    --rc-background-transparent: var(--rc-dark-transparent);

    --rc-line: var(--rc-dark);
    --rc-line-inverted: var(--c-light);

    --rc-button: var(--rc-light);
    --rc-onButton: var(--rc-dark);
  }
}

/***
 * III) Generic: Ground-zero styles (Normalize.css, resets, box-sizing)
 *
 * The new CSS reset - version 1.7.2 (last updated 23.6.2022)
 * GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
- The "symbol *" part is to solve Firefox SVG sprite bug
*/
*:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
- fix for the content editable attribute will work properly.
- webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/**
 * IV) Base: Un-classed HTML elements (type selectors)
 *
 * Internet Identity Styles
 **/

:root {
  /* general styles */
  font-family: "Montserrat", sans-serif;
  font-size: max(62.5%, calc(17.5% + 0.6vw)); /* 10px / 1200px min 10px */

  background: var(--rc-background);
  color: var(--rc-text);
}

body {
  font-size: 1.6rem;
  line-height: var(--vs-line-height);
}

/**
 * V) Objects: Cosmetic-free design patterns
 * 
 * We generally use the BEM methodology.
 * http://getbem.com/
 *
 * We prefix classes with the following convention:
 * - `.c-` component
 * - `.l-` layout
 * - `.t-` typography
 *
 * We avoid element, id and attribute selectors when it is saint to do so. 
 * Use classes when possible. 
 */

.t-strong {
  font-weight: bold;
}

.t-weak {
  font-weight: normal;
  font-size: 0.8em;
}

.t-title {
  font-weight: bold;
  font-size: 1.8rem;
  line-height: 1.1;
  margin-top: 1em;
}

.t-title:first-child {
  margin-top: 0;
}

.t-title--complications {
  display: flex;
  align-items: center;
  gap: 0.2em;
}

.t-title__complication {
  font-weight: 300;
  font-size: 0.8em;
  flex-grow: 1;
}

.t-title__complication--end {
  flex-grow: 0;
  text-align: right;
}

.t-title--main {
  font-size: 2.8rem;
  margin-top: 0.5em;
}

.t-lead {
  font-size: 1.6rem;
}

.t-title + .t-lead {
  margin-top: 0.75em;
}

.t-paragraph {
  margin-top: 1em;
}

.t-paragraph:first-child {
  margin-top: 0;
}

.t-vip {
  font-size: 2.4rem;
  font-weight: 500;
  text-align: center;
}

.t-discreet {
  font-size: 0.8em;
}

a,
.t-link {
  display: inline;
  color: var(--rc-interaction-text);
  color: inherit;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
}

.t-link--discreet {
  font-weight: normal;
}

a:focus,
a:hover,
.t-link:not([disabled]):focus,
.t-link:not([disabled]):hover {
  text-decoration: underline;
}

.t-link__icon {
  display: inline-block;
  position: relative;
  height: calc(1em * var(--vs-line-height));
  aspect-ratio: 1;
  vertical-align: middle;
}

.t-link__icon svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateY(-0.1em);
  width: 100%;
}

.t-list {
  list-style-type: disc; 
}

.t-list li {
  margin-top: var(--vs-stack);
  margin-left: calc(var(--vs-inline) * 2);
}

#pageContent,
.l-wrap {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
}

.l-container {
  position: relative;
  font-size: 1.6rem;
  min-width: 30rem;
  max-width: 40rem;
  margin: 0 auto;
}

.l-divider {
  display: block;
  margin-top: calc(var(--vs-stack) * 2);
  margin-bottom: calc(var(--vs-stack) * 2);
  border-top: var(--vs-line) var(--rc-line) solid;
}

.l-divider--text {
  display: flex;
  gap: calc(var(--vs-gutter) * 2);
  align-items: center;
  margin-top: calc(var(--vs-stack) * 2);
  margin-bottom: calc(var(--vs-stack) * 2);
  border-top: none;
  height: calc(1em * var(--vs-line-height));
}

.l-divider--text::before,
.l-divider--text::after {
  content: "";
  flex-grow: 1;
  border-top: var(--vs-line) var(--rc-line) solid;
}

.l-divider__label {
  display: inline-block;
}

.l-section {
  display: block;
  margin-top: calc(var(--vs-stack) * 3);
}

.l-horizontal {
  display: flex;
  gap: var(--vs-inline);
}

/**
 * Title with counter and Actions 
 */

/**
 * Card components
 */

.c-card {
  display: block;
  position: relative;
  padding: var(--rs-card-bezel) var(--rs-card-bezel-x);
  border: var(--vs-line) solid var(--rc-line);
  background-color: var(--rc-background);
  border-radius: 0.4rem;
  margin-top: var(--rs-card-stack);
}

.c-card--narrow {
  padding: var(--rs-card-bezel-narrow);
}

.c-card--outline {
  border: var(--vs-line) var(--rc-line-inverted) solid;
}

/*
 * Highlighted card will be deployed later
 * 
.c-card--highlight {
  background-color: var(--rc-background-transparent);
  border: var(--vs-line) solid var(--rc-line);
}

.c-card--highlight::before {
  content: " ";
  position: absolute;
  z-index: var(--vz-backdrop);
  top: 50%;
  left: 50%;
  width: 120%;
  aspect-ratio: 1;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: linear-gradient(145deg, var(--rg-brand));
  filter: blur(8rem);
}
*/

.c-card--icon {
  padding-left: calc(var(--rs-card-bezel) * 2 + 2rem);
}

.c-card__icon {
  position: absolute;
  left: var(--rs-card-bezel);
  top: var(--rs-card-bezel);
}

.c-card--warning {
  border-style: double;
  border-width: calc(var(--vs-line) * 2);
  border-radius: 4px;
  border-image-slice: 1;
  border-image-source: linear-gradient(270deg, var(--rg-brand));
}

/**
 *  logo component 
 */
.c-logo {
  display: block;
  overflow: hidden;
  margin: calc(var(--s-logo-stack) - 1rem) 0 var(--s-logo-stack);
}

.c-logo svg {
  /* 
    this was done because the logo is oddly strangely positioned within the SVG
    to account of the that there is some whitespace on top and on the bottom of 
    log we cut it uff by removing 40% in height.

    We need a logo that is just the logo at some point.
  */
  margin-top: -20%;
  margin-bottom: -20%;
}

/**
 *  Forms and Buttons 
 */

.c-button {
  background: var(--rc-button);
  color: var(--rc-onButton);
  padding: var(--rs-button-bezel);
  margin-top: var(--rs-button-stack);
  display: block;
  width: 100%;
  text-align: center;
  border-radius: 0.4rem;
}

.c-button--secondary {
  background: var(--rc-onButton);
  color: var(--rc-button);
}

.c-button:not([disabled]):focus,
.c-button:not([disabled]):hover {
  opacity: 0.9;
  box-shadow: 0 0 0 2px #ffffff, 0 0 3px 5px var(--rc-interaction);
  outline: 2px dotted transparent;
  outline-offset: 2px;
}

.c-button[disabled],
.c-button--disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.c-button--warning {
  background: var(--rc-warning);
  color: var(--rc-onWarning);
}

.c-input {
  display: block;
  width: 100%;
  padding: var(--rs-input-bezel);
  margin-top: var(--rs-input-stack);
  background: var(--rc-input);
  color: var(--rc-onInput);
}

/**
 *  Footer component
 */

.l-footer {
  padding: var(--rs-footer-gutter);
  margin-top: var(--rs-footer-stack);
}

.c-nav-links {
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: calc(var(--vs-gutter) * 10);
}

.c-nav-links li + li::before {
  content: "·";
  margin: 0 calc(var(--vs-gutter) * 2);
}

.page-signature {
  display: block;
  padding: var(--rs-footer-gutter);
  transition: background 0.2s;
}

.page-signature img {
  display: block;
  max-width: 100%;
}

.page-signature:hover,
.page-signature:focus {
  background: var(--grey-050);
}

.c-list li + li {
  margin-top: var(--vs-gutter);
}

/* Tooltip */

.c-tooltip {
  position: relative;
}

.c-tooltip:hover .c-tooltip__message {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.2s ease-in;
}

.c-tooltip__message {
  position: absolute;
  left: 0;

  opacity: 0;
  visibility: hidden;
  z-index: var(--vz-tooltip);
  text-align: left;
  min-width: 15rem;
  max-width: 20rem;

  /** 
    this is the width of the tooltip 
    we might add this to the card component later
  **/
}

.c-tooltip__message--right {
  right: 0;
  left: auto;
}

.c-action-list {
  margin-top: 1rem;
}
.c-action-list__item {
  display: flex;
  gap: var(--vs-gutter);
}

.c-action-list__label {
  flex-grow: 1;
}

.c-action-list__action,
.c-action-list__label {
  display: flex;
  align-items: center;
  border: var(--vs-line) solid var(--rc-line);
  border-radius: 4px;
  padding: var(--rs-button-bezel);
  background: var(--rc-background);
}
